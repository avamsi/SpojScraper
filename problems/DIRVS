<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/DIRVS"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>9. Direct Visibility</h1>
		<h2>Problem code: DIRVS</h2>
	</td>
	</tr>
</table>

<p align="justify">
<P>
Building the GSM network is a very expensive and complex task. Moreover,
after the <EM>Base Transceiver Stations</em> (<EM>BTS</em>) are built and
working, we need to perform many various measurements to determine the state
of the network, and propose effective improvements to be made.


<P>
The ACM technicians have a special equipment for measuring the strength of
electro-magnetic fields, the transceivers' power and quality of the signal.
This equipment is packed into a huge knapsack and the technician must move
with it from one BTS to another. Unfortunately, the knapsack have not enough
memory for storing all of the measured values. It has a small cache only,
that can store values for several seconds. Then the values must be
transmitted to the BTS by an infrared connection (IRDA). The IRDA needs
direct visibility between the technician and the BTS.

<P>
Your task is to find the path between two neighbouring BTSes such that at
least one of those BTSes is always visible.

<P>
<H3>Input</h3>

<P>
There is a single positive integer <VAR>T</var> on the first line of input (equal to about 500). It stands
for the number of test cases to follow. Each test case consists of a town
description. For simplicity, a town is modelled as a rectangular grid of

<VAR>P x Q</var> square fields. Each field is exactly 1 metre wide. For each
field, a non-negative integer <VAR>Z</var><SUB><VAR>i</var>,<VAR>j</var></sub> is given, representing the height of
the terrain in that place, in metres. That means the town model is made of
cubes, each of them being either solid or empty. There are no "half solid"
cubes.

<P>
The first line of each test case contains two integer numbers <VAR>P</var> and <VAR>Q</var>,
separated by a single space, 
1 <= <VAR>P</var>,<VAR>Q</var> <= 200. Then there are <VAR>P</var> lines
each containing <VAR>Q</var> integer numbers separated by a space. These numbers are

<VAR>Z</var><SUB><VAR>i</var>,<VAR>j</var></sub>, where 
1 <= <VAR>i</var> <= <VAR>P</var>, 
1 <= <VAR>j</var> <= <VAR>Q</var> and

0 <= <VAR>Z</var><SUB><VAR>i</var>,<VAR>j</var></sub> <= 5000. After the terrain
description, there are four numbers 

<VAR>R</var><SUB>1</sub>, <VAR>C</var><SUB>1</sub>, <VAR>R</var><SUB>2</sub>, <VAR>C</var><SUB>2</sub> on the last line of
each test case. These numbers represent position of two
BTSes, 
1 <= <VAR>R</var><SUB>1</sub>,<VAR>R</var><SUB>2</sub> <= <VAR>P</var>, 
1 <= <VAR>C</var><SUB>1</sub>,<VAR>C</var><SUB>2</sub> <= <VAR>Q</var>. The first coordinate
(<VAR>R</var>) determines the row of the town, the second coordinate determines the
column.


<P>
The technician is moving in steps (<EM>steps</em> stands for
<EM>Standard Technician's Elementary Positional Shift</em>). Each step is made
between two neighbouring square fields. That means the step is always in
North, South, West or East direction. It is not possible to move diagonally.
The step between two fields <VAR>A</var> and <VAR>B</var> (step from <VAR>A</var> to <VAR>B</var>) is allowed
only if the height of the terrain in the field <VAR>B</var> is not very different from
the height in the field <VAR>A</var>. The technician can climb at most 1 metre up or
descend at most 3 metres down in a single step.


<P>
At the end of each step, at least one of the two BTSes must be visible.
However, there can be some point "in the middle of the step" where no BTS
is visible. This is OK and the data is handled by the cache. The BTS is
considered visible, if there is a direct visibility between the unit cube
just above the terrain on the BTSes coordinates and the cube just above the
terrain on the square field, where the technician is. Direct visibility
between two cubes means that the line connecting the centres of the two cubes
does not intersect any solid cube. However, the line can touch any number of
solid cubes. In other words, consider both the BTS and the technician being
points exactly half metre above the surface and in the centre of the
appropriate square field.

<P>
Note that the IRDA beam can go between two cubes that touch each other by
their edge, although there is no space between them. It is because such
a beam touches both of these two cubes but does not intersect any of
them. See the last test case of the sample input for an example of such
a situation.

<P>
<H3>Output</h3>

<P>
You are to find the shortest possible path from BTS (<VAR>R</var><SUB>1</sub>, <VAR>C</var><SUB>1</sub>) to BTS (<VAR>R</var><SUB>2</sub>, <VAR>C</var><SUB>2</sub>), meeting the above criteria. All
steps must be done between neighbouring fields, the terrain must not elevate
or descend too much, and at the end of each step, at least one BTS must be
visible.

<P>
For each test case, print one line containing the sentence
<TT>The shortest path is </tt><VAR>M</var><TT> steps long.</tt>, where <VAR>M</var> is the number of
steps that must be made. If there is no such path, output the sentence

<TT>Mission impossible!</tt>.

<h3>Example</h3>
<p>Sample Input:</p>

<PRE><tt>4
5 5
8 7 6 5 4
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
2 2 2 2 2
1 1 5 1
5 8
2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2
9 9 9 9 9 9 9 2
2 2 2 2 2 2 2 2
1 2 5 1
5 8
2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2
2 2 2 2 2 2 2 2
9 9 9 9 9 9 9 2
2 2 2 2 2 2 2 2
1 5 5 1
6 12
5 5 5 5 1 5 5 5 5 5 5 5
5 5 5 5 1 5 5 5 5 5 5 5
5 5 5 5 9 5 5 5 5 5 5 5
5 9 1 5 5 5 5 5 5 5 5 5
5 5 9 5 5 5 5 5 5 5 5 5
5 5 9 5 5 5 5 5 5 5 5 5
6 1 3 12
</tt></pre>

<p>Sample Output:</p>

<PRE>
<tt>The shortest path is 10 steps long.
Mission impossible!
The shortest path is 14 steps long.
The shortest path is 18 steps long.
</tt></pre>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/adrian">Adrian Kosowski</a></td></tr>
<tr><td>Date:</td><td>2004-05-08</td></tr>
<tr><td>Time limit:</td><td>13s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>ACM Central European Programming Contest, Prague 2000</td></tr>	
</table>
