<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/BYTESM2"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>3923. Philosophers Stone</h1>
		<h2>Problem code: BYTESM2</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>One of the secret chambers in Hogwarts is full of philosopher&#8217;s stones. The floor of the chamber is covered by h Ã— w square tiles, where there are h rows of tiles from front (first row) to back (last row) and w columns of tiles from left to right. Each tile has 1 to 100 stones on it.

Harry has to grab as many philosopher&#8217;s stones as possible, subject to the following restrictions:
<ul><li>He starts by choosing any tile in the first row, and collects the philosopher&#8217;s stones on that tile. Then, he moves to a tile in the next row, collects the philosopher&#8217;s stones on the tile, and so on until he reaches the last row.</li>
<li>
When he moves from one tile to a tile in the next row, he can only move to the tile just below it or diagonally to the left or right.</li></ul>

Given the values of h and w, and the number of philosopher&#8217;s stones on each tile, write a program to compute the maximum possible number of philosopher&#8217;s stones Harry can grab in one single trip from the first row to the last row.

<h3>Input</h3>
<p>The first line consists of a single integer T, the number of test cases. In each of the test cases, the first line has two integers. The first integer h (1<=h<=100) is the number of rows of tiles on the floor. The second integer w (1<=w<=100) is the number of columns of tiles on the floor.
Next, there are h lines of inputs. The ith line of these, specifies the number of philosopher&#8217;s stones in each tile of the ith row from the front. Each line has w integers, where each integer m (0<=m<=100) is the number of philosopher&#8217;s stones on that tile. The integers are separated by a space character.
<h3>Output</h3>
<p>The output should consist of T lines, (1<=T<=100), one for each test case. Each line consists of a single integer, which is the maximum possible number of philosopher&#8217;s stones Harry can grab, in one single trip from the first row to the last row for the corresponding test case.
<h3>Example</h3>

<pre>
<b>Input:</b>
1
6 5
3 1 7 4 2
2 1 3 1 1
1 2 2 1 8
2 2 1 5 3
2 1 4 4 4
5 2 7 5 1

<b>Output:</b>
32 	

//7+1+8+5+4+7=32
</pre>


<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/paritosh1010">Paritosh Aggarwal</a></td></tr>
<tr><td>Date:</td><td>2009-02-21</td></tr>
<tr><td>Time limit:</td><td>0.141s-0.393s</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: ASMGCC AWK C++ 4.3.2 C++14 CLOJ COB ERL F# GO GROOVY JS NODEJS PERL 6 PYPY PYTH 3.2.3 PYTH 3.2.3 n PY3.4 SCALA SCM chicken SED TCL VB.net </td></tr>
	
</table>
