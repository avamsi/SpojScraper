<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/ACPC10H"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>7970. Jumping Beans</h1>
		<h2>Problem code: ACPC10H</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>N jumping beans are standing in a line. At each second, a bean jumps. Your assignment is to figure the final position of the beans after a given number of seconds. To make the explanation easier, let&rsquo;s assign a unique letter to each bean, and for simplicity, let&rsquo;s assume the beans are initially standing in order: A, B, C, etc. To simplify even further, let&rsquo;s assume N = 4, so initially the beans are standing in the order ABCD. At the first second, A jumps, swapping its place with B. Now the order is BACD. At the second second, it&rsquo;s B&rsquo;s turn, but this time swapping its place with A, then C, resulting in the standing order ACBD. More formally: at second s, the left most bean that has jumped the least number of times will do the swap s times, each time swapping its place with the bean on its right. Note that when the right-most bean swaps, it moves to the left-most position, pushing everybody else one place to the right. So, continuing with the previous example, and starting with the arrangement ACBD, it is bean C&rsquo;s turn, since it is the left-most bean that has jumped the least amount of times. Being at the third second, C will swap three times, first resulting in ABCD, then ABDC, and then CABD. At the fourth second, it&rsquo;s bean D&rsquo;s turn to jump. At the fifth second, and since all the four beans have jumped exactly once, the bean that will jump is the bean standing at the left-most position.</p>
<h3>Input</h3>
<p>Your program will be tested on one or more test cases. Each test case is specified on a single line specifying an integer T and a string S where (0 &lt; T &lt; 10<sup>9</sup> ) is the number of seconds and S is the initial arrangement of the beans. S is a non empty string made of different upper-case letters (&rsquo;A&rsquo;. . . &rsquo;Z&rsquo;).<br />The last test case is followed by a line having a single 0.</p>
<h3>Output</h3>
<p>For each test case, print the following line:<br />k. S<br />Where k is the test case number (starting at one,) and S is the arrangement of the beans after jumping for T seconds.</p>
<h3>Example</h3>
<pre><strong>Input:</strong><br />3 ABCD<br />13 ACM<br />0<br /><br /><strong>Output:</strong><br />1. CABD<br />2. CAM</pre>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/omar_azazy">Omar ElAzazy</a></td></tr>
<tr><td>Date:</td><td>2010-11-30</td></tr>
<tr><td>Time limit:</td><td>0.165s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: SCM chicken </td></tr>
<tr><td>Resource:</td><td>ACPC 2010</td></tr>	
</table>
