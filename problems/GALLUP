<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/GALLUP"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>4000. GALLUP</h1>
		<h2>Problem code: GALLUP</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>Often, we see results of gallups, like this:
Prefer red: 3.5%
Prefer green: 4.5%
Prefer yellow: 22.0%
Prefer blue: 70.0%
and you begin to wonder: how many people did they really ask? If the numbers are simple, like 20%, 40%, and 40%, you know that they asked 5 people (or 10, or 15, or more, but we are interested in the minimum number of people).
Your task is to write a program that reads sets of percentages and calculates the smallest number of people that could produce the given percentages. We know that this number is always less than 10 000.

<h3>Input</h3>
<p>The input is a set of percentages. Each set is on a line of its own. Every line starts with an integer n (0 <= n <= 20) giving the number of percentages in the set. If n > 0, the percentages follow as n numbers; these numbers may have 0&#8211;5 decimals, and all percentages in a set have the same number of decimals. (If there are no decimals, there is no decimal point.) The percentages always add up to about 100% as there may be small rounding
errors. Numbers are rounded when digits are removed; they are rounded upwards if the first removed digit is 5 or more. Thus, 4.472 is rounded to 4.47, 4.5, or 4, depending on how many digits you want.

<h3>Output</h3>
<p>For each set of data, print a line starting with &#8220;Case i :&#8221;, where &#8220;i&#8221; is the data set&#8217;s number. Then follows a space and an integer giving the computed number of people. If no legal answer in the range 1&#8211;9999 exists,
print &#8220;error&#8221; instead of the number.

<h3>Example</h3>

<pre>
<b>Input:</b>
3 20 40 40
3 33.3 33.3 33.3
2 33 67
1 100.0000
4 3.75 4.25 22.00 70.00
2 49 51
2 50 51
2 49 50
0

<b>Output:</b>
Case 1: 5
Case 2: 3
Case 3: 3
Case 4: 1
Case 5: 400
Case 6: 35
Case 7: 200
Case 8: error
</pre>


<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/fabio">Fabio Avellaneda</a></td></tr>
<tr><td>Date:</td><td>2009-03-01</td></tr>
<tr><td>Time limit:</td><td>8.139s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: ERL JS NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>I maratón interuniversitaria del circuito Redis - Acis. Sedes: Politécnico - Javeriana</td></tr>	
</table>
