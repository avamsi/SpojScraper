<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/LABYR1"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>38. Labyrinth</h1>
		<h2>Problem code: LABYR1</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p align=justify>
The northern part of the Pyramid contains a very large and complicated
labyrinth. The labyrinth is divided into square blocks, each of them
either filled by rock, or free. There is also a little hook on
the floor in the center of every free block. The ACM have found that
two of the hooks must be connected by a rope that runs through the hooks in
every block on the path between the connected ones. When the rope is
fastened, a secret door opens. 
The problem is that we do not know which hooks to connect. That means 
also that the neccessary length of the rope is unknown. Your task is to 
determine the maximum length of the rope we could need for a given labyrinth.

<H3>Input</H3>

<p align=justify>The input consists of <VAR>T</VAR> test cases. The number of them (<VAR>T</VAR>) is given on
the first line of the input file.
Each test case begins with a line containing two integers <VAR>C</VAR> and <VAR>R</VAR>
(<VAR>3 &lt;= C,R &lt;= 1000</VAR>) indicating the number of columns and rows. Then
exactly <VAR>R</VAR> lines follow, each containing <VAR>C</VAR> characters. These characters
specify the labyrinth. Each of them is either a hash mark (<CODE>#</CODE>) or a period
(<CODE>.</CODE>). Hash marks represent rocks, periods are free blocks. It is
possible to walk between neighbouring blocks only, where neighbouring
blocks are blocks sharing a&nbsp;common side. We cannot walk
diagonally and we cannot step out of the labyrinth. 

<p align=justify>
The labyrinth is designed in such a way that there is exactly one path between
any two free blocks. Consequently, if we find the proper hooks to connect, it
is easy to find the right path connecting them.


<H3>Output</H3>

<p align=justify>Your program must print exactly one line of output for each test case. The
line must contain the sentence
"<CODE>Maximum rope length is <VAR>X</VAR>.</CODE>" where <VAR>X</VAR>is the
length of the longest path between any two free blocks, measured in blocks.


<H3>Example</h3>
<PRE>
Sample Input:

<tt>2
3 3
###
#.#
###
7 6
#######
#.#.###
#.#.###
#.#.#.#
#.....#
#######</tt>


Sample output:

<tt>Maximum rope length is 0.
Maximum rope length is 8.</tt>
</PRE>
<b>Warning: large Input/Output data, be careful with certain languages</b>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/adrian">Adrian Kosowski</a></td></tr>
<tr><td>Date:</td><td>2004-06-06</td></tr>
<tr><td>Time limit:</td><td>5s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: SCM chicken </td></tr>
<tr><td>Resource:</td><td>ACM Central European Programming Contest, Prague 1999</td></tr>	
</table>
