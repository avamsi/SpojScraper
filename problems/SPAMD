<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/SPAMD"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>5104. Spam Detection</h1>
		<h2>Problem code: SPAMD</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>It is well-known that the number of occurrences of the term "free" can distinguish spam and non-spam emails. <br />Your task is to build a spam detection module, based on the number of term "free" in an email. <br />The core of this detection module is a spam classifier, which is represented by two variables: Low and High. <br />An email that contains X "free" words is classified by this module as a spam if Low &le; X &le; High, otherwise it is not. <br />To measure the goodness of a classifier, we introduce several information-retrieval terminologies: <br /> <br />Actual        <br />Spam     Non-Spam        <br />Predicted     Spam     TP     FP        <br />Non-Spam     FN     TN      <br /><br />TP (true positive) is the number of emails which are truly predicted as spam; FN (false negative) is the number of emails which are wrongly predicted as non-spam, and so on. <br />The portion of emails that are correctly identified as spam is denoted as precision (P), which is formulated as P = TP / (TP + FP). <br />The portion of spam emails that are successfully identified is denoted as recall (R), which is formulated as R = TP / (TP + FN). <br />To balance between precision and recall, we use the F-measure which is formulated as F = 2 x P x R / (P + R). <br />For example, when TP = 5, FP = 3, FN = 2, TN = 4, we have R = 5/7, P = 5/8, and F = 2/3. <br />When there is no spam, we can report all emails as non-spam with F = 1.0 (perfect classifier). <br />Our data mining team has manually analyzed several emails and labeled them as spam or non-spam. <br />Your task is to find the values of Low and High that yield the best classifier, i.e., the one that maximizes the F-measure. <br /><br /><strong>Input</strong> <br /><br />The input consists of several test cases, where each case contains of two lines: <br /><br />N : The maximum number of term &ldquo;free&rdquo; in any emails (1 &le; N &le; 2 x106) <br />a0 A B M : parameters of random number generator. (2 &le; M &le; 10; 0 &le; a0, A, B &lt; M) <br /><br />This random number generator generates a sequence of number: <br />ai = (A * ai-1 + B) MOD M for i &gt;= 1 <br /><br />Specifying: <br />posi = a2i (0 &le; i &le; N) : the number of spam emails with i number of term &ldquo;free&rdquo;. <br /><br />negi = a2i+1 (0 &le; i &le; N) : the number of non-spam emails with i number of term &ldquo;free&rdquo;. The input is terminated by EOF. <br /><br /><strong>Output</strong></p>
<p>For each simulation print the F-measure of the best classifier (accurate to 6 decimal places). <br /> <br /><strong>Sample Input</strong> <br />3 <br />1 1 1 3 <br />5 <br />2 3 4 5</p>
<p><strong>Output for Sample Input</strong></p>
<p>0.666667 <br />0.923077      <br /><br />Explanation for the 1st case: This random number generator generates a sequence of 1, 2, 0, 1, 2, &hellip; The number of spam emails is: posi = {1, 0, 2, 1}, and the number of non-spam emails is negi = {2, 1, 0, 2}. <br /><br />The optimal classifier treats emails with number of term &ldquo;free&rdquo; between 2 and 3 as spam, with R = 3/4 and P = 3/5, resulting F = 2/3. Another way of producing optimal classifier is to consider emails with number of term &ldquo;free&rdquo; equals to 2 as spam.</p>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/beo_map">VOJ problem setters </a></td></tr>
<tr><td>Date:</td><td>2009-10-28</td></tr>
<tr><td>Time limit:</td><td>3s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: C++ 4.3.2 NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>Problem Setter: ardiankp<br/>ACM ICPC - Jakarta 2009</td></tr>	
</table>
