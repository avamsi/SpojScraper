<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/CERC07C"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>2051. Cell Phone</h1>
		<h2>Problem code: CERC07C</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>Nowadays, everyone has a cellphone, or even two or three. You probably know where their
name comes from. Do you. Cellphones can be moved (they are "mobile") and they use wireless
connection to static stations called BTS (Base Transceiver Station). Each BTS covers an area
around it and that area is called a cell.

<p>The Czech Technical University runs an experimental private GSM network with a BTS right on
top of the building you are in just now. Since the placement of base stations is very important
for the network coverage, your task is to create a program that will find the optimal position
for a BTS. The program will be given coordinates of "points of interest". The goal is to find
a position that will cover the maximal number of these points. It is supposed that a BTS can
cover all points that are no further than some given distance R. Therefore, the cell has a circular
shape.

<p><center><img src="/content/carl:cerc07c.jpg" alt="example"></center>

<p>The picture above shows eight points of interest (little circles) and one of the possible optimal
BTS positions (small triangle). For the given distance R, it is not possible to cover more than
four points. Notice that the BTS does not need to be placed in an existing point of interest.

<h3>Input</h3>
<p>The input consists of several scenarios. Each scenario begins with a line containing two integer
numbers N and R. N is the number of points of interest,1 <= N <= 2 000. R is the maximal
distance the BTS is able to cover, 0 <= R < 10 000. Then there are N lines, each containing two
integer numbers X_i, Y_i giving coordinates of the i-th point, |X_i|, |Y_i| < 10 000. All points are
distinct, i.e., no two of them will have the same coordinates.

<p>The scenario is followed by one empty line and then the next scenario begins. The last one is
followed by a line containing two zeros.

<p>A point lying at the circle boundary (exactly in the distance R) is considered covered. To avoid
floating-point inaccuracies, the input points will be selected in such a way that for any possible
subset of points S that can be covered by a circle with the radius R +0.001, there will always
exist a circle with the radius R that also covers them.

<h3>Output</h3>
<p>For each scenario, print one line containing the sentence "It is possible to cover M points.",
where M is the maximal number of points of interest that may be covered by a single BTS.

<h3>Example</h3>
<pre>
<b>Input:</b>

8 2
1 2
5 3
5 4
1 4
8 2
4 5
7 5
3 3

2 100
0 100
0 -100

0 0

<b>Output:</b>

It is possible to cover 4 points.
It is possible to cover 2 points.
</pre>


<p><i>The first sample input scenario corresponds to the picture, providing that the X axis aims right
and Y axis down.</i>


<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/carl">Rafal</a></td></tr>
<tr><td>Date:</td><td>2007-11-16</td></tr>
<tr><td>Time limit:</td><td>3.196s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: ERL JS NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>Central European Programming Contest, Prague 2007</td></tr>	
</table>
