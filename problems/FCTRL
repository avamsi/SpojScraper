<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/FCTRL"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>11. Factorial</h1>
		<h2>Problem code: FCTRL</h2>
	</td>
	</tr>
</table>

<p align="justify">
<P>
The most important part of a GSM network is so called
<EM>Base Transceiver Station</em> (<EM>BTS</em>). These transceivers form the
areas called <EM>cells</em> (this term gave the name to the cellular phone)
and every phone connects to the BTS with the strongest signal (in
a little simplified view). Of course, BTSes need some attention and
technicians need to check their function periodically.

<P>
ACM technicians faced a very interesting problem recently. Given a set of
BTSes to visit, they needed to find the shortest path to visit all of the
given points and return back to the central company building. Programmers
have spent several months studying this problem but with no results. They
were unable to find the solution fast enough. After a long time, one of the
programmers found this problem in a conference article. Unfortunately, he
found that the problem is so called "Travelling Salesman Problem" and it is
very hard to solve. If we have <VAR>N</var> BTSes to be visited, we can visit them in
any order, giving us <VAR>N</var>! possibilities to examine. The function expressing
that number is called factorial and can be computed as a product

1.2.3.4....<VAR>N</var>. The number is very high even for a relatively small <VAR>N</var>.

<P>
The programmers understood they had no chance to solve the problem. But
because they have already received the research grant from the government,
they needed to continue with their studies and produce at least <EM>some</em>
results. So they started to study behaviour of the factorial function.

<P>
For example, they defined the function <VAR>Z</var>. For any positive integer <VAR>N</var>,
<VAR>Z</var>(<VAR>N</var>) is the number of zeros at the end of the decimal form of number
<VAR>N</var>!. They noticed that this function never decreases. If we have two numbers
<VAR>N</var><SUB>1</sub><<VAR>N</var><SUB>2</sub>, then 
<VAR>Z</var>(<VAR>N</var><SUB>1</sub>) <= <VAR>Z</var>(<VAR>N</var><SUB>2</sub>). It is because we can never "lose" any
trailing zero by multiplying by any positive number. We can only get new
and new zeros. The function <VAR>Z</var> is very interesting, so we need a computer
program that can determine its value efficiently.

<P>
<H3>Input</h3>

<P>
There is a single positive integer <VAR>T</var> on the first line of input (equal to about 100000). It stands
for the number of numbers to follow. Then there are <VAR>T</var> lines, each containing
exactly one positive integer number <VAR>N</var>, 
1 <= <VAR>N</var> <= 1000000000.

<P>
<H3>Output</h3>

<P>
For every number <VAR>N</var>, output a single line containing the single non-negative
integer <VAR>Z</var>(<VAR>N</var>).
<h3>Example</h3>
<p>Sample Input:</p>

<PRE>
<tt>6
3
60
100
1024
23456
8735373
</tt></pre>

<p>Sample Output:</p>

<PRE>
<tt>0
14
24
253
5861
2183837
</tt></pre>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/adrian">Adrian Kosowski</a></td></tr>
<tr><td>Date:</td><td>2004-05-09</td></tr>
<tr><td>Time limit:</td><td>6s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>ACM Central European Programming Contest, Prague 2000</td></tr>	
</table>
