<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/FOLD"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>1803. Fold</h1>
		<h2>Problem code: FOLD</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>

Read the statement of problem E: Edge to understand how to fold a sheet of paper and how to interpret the input.
We define a "stripe" to be a maximally large part of the sheet that has no folding line going through.
Since the turns occur at equidistant places, all stripes are congruent.

</p><p>

In this problem you are given the description of the result of performing several folding steps as in problem E: Edge, i.e., in the unfolded state.
Additionally, you know that the length of the sheet in its folded state is exactly the length of 1 stripe (again, we ignore thickness).

</p><p>

Find the minimum number of folding steps necessary to generate the described sheet from an initially flat sheet of paper.
Note that performing a folding step may create more than one turn in the result because parts of the sheet already overlay due to previous folding steps.
When a step is carried out, however, all overlaying parts of the sheet are affected, i.e., it is not allowed to fold, say, only the top three layers.

</p><p>

Finally, note that every result can be obtained by iterating through the turns in a fixed direction and performing a folding step at each turn, thereby accumulating a 1 stripe long stack of all stripes.
If <code>n</code> is the number of turns in the input description, this procedure in fact requires <code>n</code> folding steps, which is not necessarily minimal as can be observed in the sample output.


</p><h3>Input Specification</h3><p>

The input contains several test cases, each on a separate line.
Each line contains a nonempty string of characters <tt>A</tt> and <tt>V</tt> describing the longer edge of the sheet.
You may assume that the length of the string is less than 200.
The input file terminates immediately after the last test case.

</p><h3>Output Specification</h3><p>

For each test case print on a line the minimum number of folding steps required to produce the described sheet of paper.

</p><h3>Sample Input</h3><p>

</p><pre>V
AVV
AAVAAVVVAAV
</pre>

<h3>Sample Output</h3><p>

</p><pre>1
2
4
</pre>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/wanderley">Wanderley GuimarÄƒes</a></td></tr>
<tr><td>Date:</td><td>2007-09-21</td></tr>
<tr><td>Time limit:</td><td>0.181s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: ERL JS SCM chicken </td></tr>
<tr><td>Resource:</td><td>University of Ulm Local Contest 2003</td></tr>	
</table>
