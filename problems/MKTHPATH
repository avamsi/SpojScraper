<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/MKTHPATH"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>3941. Kth Shortest Path</h1>
		<h2>Problem code: MKTHPATH</h2>
	</td>
	</tr>
</table>

<p align="justify">
<p>   </p>
<table class="problems" style="width: 100%;" border="0">
<tbody>
<tr class="navigation">
<td width="50%"><a href="/SPOJ/problems/MKTHPATH/en/">English</a></td>
<td width="50%"><a href="/SPOJ/problems/MKTHPATH/vn/">Vietnamese</a></td>
</tr>
</tbody>
</table>
<p></p>
<pre>Isaac is tired of his daily trip to his office, using the same shortest route everyday. <br />Although this saves his time, he must see the same scenery again<br />and again. He cannot stand such a boring commutation any more. <br /><br />One day, he decided to improve the situation. He would change his route <br />everyday at least slightly. His new scheme is as follows. On the first day, <br />he uses the shortest route. On the second day, he uses the second shortest<br />route, namely the shortest except one used on the first day. In general, <br />on the k-th day, the k-th shortest route is chosen. Visiting the same <br />place twice on a route should be avoided, of course.<br /><br />You are invited to help Isaac, by writing a program which finds his route<br />on the k-th day. The problem is easily modeled using terms in the <br />graph theory. Your program should find the k-th shortest path in the given directed graph.<br /></pre>
<h3>Input</h3>
<pre>The input consists of multiple datasets, each in the following format.<br /><br />    n	m	k	a	b<br />    x1	y1	d1	<br />    x2	y2	d2<br /><br />    &hellip;<br />    xm	ym	dm<br /><br />Every input item in a dataset is a non-negative integer. Two or more input<br />items in a line are separated by a space.<br /><br />n is the number of nodes in the graph. You can assume the inequality 2 &le; n &le; 50. <br />m is the number of (directed) edges. a is the start node, and b is the goal<br />node. They are between 1 and n, inclusive. You are required to find <br />the k-th shortest path from a to b. You can assume 1 &le; k &le; 200 and a &ne; b.<br /><br />The i-th edge is from the node xi to yi with the length di (1 &le; i &le; m). <br />Both xi and yi are between 1 and n, inclusive. di is between 1 and 10000, <br />inclusive. You can directly go from xi to yi, but not from yi to xi <br />unless an edge from yi to xi is explicitly given. The edge connecting <br />the same pair of nodes is unique, if any, that is, if i &ne; j, it is never the <br />case that xi equals xj and yi equals yj. Edges are not connecting a node <br />to itself, that is, xi never equals yi. Thus the inequality 0 &le; m &le; n(n &minus; 1) holds.<br /><br />Note that the given graph may be quite unrealistic as a road network. <br />Both the cases m = 0 and m = n(n &minus; 1) are included in the judges&rsquo; data.<br /><br />The last dataset is followed by a line containing five zeros (separated by a space).<br /><br />SAMPLE INPUT<br />5 20 10 1 5<br />1 2 1<br />1 3 2<br />1 4 1<br />1 5 3<br />2 1 1<br />2 3 1<br />2 4 2<br />2 5 2<br />3 1 1<br />3 2 2<br />3 4 1<br />3 5 1<br />4 1 1<br />4 2 1<br />4 3 1<br />4 5 2<br />5 1 1<br />5 2 1<br />5 3 1<br />5 4 1<br />4 6 1 1 4<br />2 4 2<br />1 3 2<br />1 2 1<br />1 4 3<br />2 3 1<br />3 4 1<br />3 3 5 1 3<br />1 2 1<br />2 3 1<br />1 3 1<br />0 0 0 0 0<br /></pre>
<h3>Output</h3>
<pre> <br />For each dataset in the input, one line should be output as specified below.<br />An output line should not contain extra characters such as spaces.<br /><br />If the number of distinct paths from a to b is less than k, the string "None" <br />should be printed. Note that the first letter of None is in uppercase, <br />while the other letters are in lowercase.<br /><br />If the number of distinct paths from a to b is k or more, the node numbers <br />visited in the k-th shortest path should be printed in the visited order, <br />separated by a hyphen (minus sign). Note that a must be the first, <br />and b must be the last in the printed line.<br /><br />In this problem the term shorter (thus shortest also) has a special meaning. <br />A path P is defined to be shorter than Q, if and only if one of the following<br />conditions holds.<br /><br />   1. The length of P is less than the length of Q. The length of a path <br />is defined to be the sum of lengths of edges on the path.<br />   2. The length of P is equal to the length of Q, and P&rsquo;s sequence of<br />node numbers comes earlier than Q&rsquo;s in the dictionary order. Let&rsquo;s specify <br />the latter condition more precisely. Denote P&rsquo;s sequence <br />of node numbers by <br />p1, p2, &hellip;, ps, and Q&rsquo;s by q1, q2, &hellip;, qt. p1 = q1 = a and ps = qt = b should<br />be observed. The sequence P comes earlier than Q in the dictionary order, <br />if for some r (1 &le; r &le; s and r &le; t), p1 = q1, &hellip;, p(r &minus; 1) = q(r &minus; 1), <br />and pr &lt; qr (pr is numerically smaller than qr).<br /><br />A path visiting the same node twice or more is not allowed. <br /><br />SAMPLE OUTPUT<br />1-2-4-3-5<br />1-2-3-4<br />None<br /></pre>
<p> </p>

<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/vdmedragon">~!(*(@*!@^&</a></td></tr>
<tr><td>Date:</td><td>2009-02-23</td></tr>
<tr><td>Time limit:</td><td>0.143s-0.600s</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: ERL JS NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>Yokohama 2006</td></tr>	
</table>
