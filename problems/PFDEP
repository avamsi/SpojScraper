<head>
<meta charset="utf-8">
</head>
<style type="text/css">
	a { text-decoration: none }
	p { line-height: 1.8; }
	th {text-align: left; }
</style>
<font face="verdana"><p>
<a href="http://www.spoj.com/problems/PFDEP"target="_blank">View problem on Spoj</a><br>
<table width="100%" style="margin-top:10px">
<tr>
	<td>
		<h2>SPOJ Problem Set (classical)</h2>
				<h1>1846. Project File Dependencies</h1>
		<h2>Problem code: PFDEP</h2>
	</td>
	</tr>
</table>

<p align="justify">
<P align="justify">
Project managers, such as the UNIX utility <TT>make</TT>,
are used to maintain large software projects made up from
many components.
Users write a <I>project file</I> specifying which components 
(called <I>tasks</I>) depend
on others and the project manager can
automatically update the components in the correct order.

<font color="#0000FF"><H2>Problem</H2></font>

<P align="justify">
Write a program that reads a project file 
and outputs the order in which the tasks should be performed.

<h3>Input</h3>
<P align="justify">
For simplicity we represent each task by an integer number
from <!-- MATH
 $1, 2, ldots, N$
 -->
<IMG
 WIDTH="84" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg1.gif"
 ALT="$1,2,ldots,N$"> (where <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg2.gif"
 ALT="$N$"> is the total number of tasks).
The first line of input specifies the number <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg2.gif"
 ALT="$N$"> of tasks
and the number <IMG
 WIDTH="23" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg6.gif"
 ALT="$M$"> of rules,
such that <!-- MATH
 $N leq 100,; Mleq 100$
 -->
<IMG
 WIDTH="150" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg46.gif"
 ALT="$N leq 100,; Mleq 100$">.

<P align="justify">
The rest of the input consists of <IMG
 WIDTH="23" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg6.gif"
 ALT="$M$"> <I>rules</I>, one in each line,
specifying dependencies using the following syntax: 
<PRE><TT>
<IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg47.gif"
 ALT="$T_0$">    <IMG
 WIDTH="14" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg48.gif"
 ALT="$k$">    <IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg49.gif"
 ALT="$T_1$">    <IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg50.gif"
 ALT="$T_2$">    ...    <IMG
 WIDTH="23" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg51.gif"
 ALT="$T_k$">
</TT></PRE>
This rule means that task number <IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg47.gif"
 ALT="$T_0$"> depends on  
<IMG
 WIDTH="14" HEIGHT="16" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg48.gif"
 ALT="$k$"> tasks <!-- MATH
 $T_1, T_2, ldots T_k$
 -->
<IMG
 WIDTH="97" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg52.gif"
 ALT="$T_1, T_2, ldots T_k$"> (we say that task <IMG
 WIDTH="22" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg47.gif"
 ALT="$T_0$"> is the <I>target</I>
and <IMG
 WIDTH="67" HEIGHT="32" ALIGN="MIDDLE" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg53.gif"
 ALT="$T_1ldots T_k$"> are <I>dependents</I>).

<P align="justify">
Note that tasks numbers are separated by single spaces
and that rules end with a newline.
Rules can appear in any order, but each task can appear as target
only once.

<P align="justify">
Your program can assume that there are no circular dependencies in the 
rules, i.e. no task depends directly or indirectly on itself.

<h3>Output</h3>
<P align="justify">
The output should be a single line
with the permutation of the tasks <IMG
 WIDTH="55" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="https://www.spoj.com/content/overwise:himg54.gif"
 ALT="$1ldots N$"> to be performed,
ordered by dependencies (i.e. no task should appear before others
that it depends on).

<P align="justify">
To avoid ambiguity in the output, tasks that do not depend on each 
other should be ordered by their number (lower numbers first).

<h3>Example</h3>

<pre>
<b>Input:</b>
5 4
3 2 1 5
2 2 5 3
4 1 3
5 1 1

<b>Output:</b>
1 5 3 2 4
</pre>


<hr>
<table border=0 cellspacing=0 cellpadding=0 align=left style="margin-bottom:10px" class="probleminfo">
<tr><td>Added by:</td><td><a href="/SPOJ/users/overwise">Robin Nittka</a></td></tr>
<tr><td>Date:</td><td>2007-10-04</td></tr>
<tr><td>Time limit:</td><td>0.405s
</td></tr>
<tr><td>Source limit:</td><td>50000B</td></tr>
<tr><td>Memory limit:</td><td>1536MB</td></tr>
	<tr>
		<td>Cluster:</td>
		<td>
							<a href="/clusters/" target="_blank">Cube (Intel Pentium G860 3GHz)</a>
					
		</td>
	</tr>
<tr><td>Languages:</td><td>All except: ERL JS NODEJS PERL 6 SCM chicken VB.net </td></tr>
<tr><td>Resource:</td><td>ACM ICPC -- SWERC 2001</td></tr>	
</table>
